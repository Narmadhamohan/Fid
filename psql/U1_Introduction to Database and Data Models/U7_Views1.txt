A company needs a unique identifier for its employees. 
How can you implement a sequence to generate unique employee IDs automatically?

CREATE SEQUENCE employee_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


Inserting Data Using Sequence


CREATE TABLE employees (
    employee_id INT DEFAULT nextval('employee_id_seq') PRIMARY KEY,
    name VARCHAR(100),
    department VARCHAR(50)
);

INSERT INTO employees (name, department) VALUES
('Alice Johnson', 'HR'),
('Bob Smith', 'Finance'),
('Charlie Brown', 'Engineering');

SELECT * FROM employees;


****************************************************************************


Question:
You want to create an easier way to access a frequently used table. 
How can you create a synonym for that table?


DDL for Synonym

CREATE SYNONYM emp FOR employees;

Query to Access Synonym
SELECT * FROM emp;


***************************************************************************
Question:
The management wants a summary view of employees showing only their names and departments. 
How can you create a view for this purpose?
CREATE VIEW employee_summary AS
SELECT name, department
FROM employees;

SELECT * FROM employee_summary;
You want to update the department of an employee through the view. How can you accomplish that?
UPDATE employee_summary
SET department = 'Marketing'
WHERE name = 'Alice Johnson';
SELECT * FROM employee_summary;


************************************************************************

The company frequently queries employee data by department. 
How can you improve query performance by creating an index?
CREATE INDEX idx_department ON employees (department);
SELECT * FROM employees WHERE department = 'Engineering';
*******************************************************************************
To improve the performance of frequently accessed employee records, how can you cluster the employees table based on the department?


CLUSTER employees USING idx_department;
SELECT * FROM employees;



